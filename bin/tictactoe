#!/usr/bin/env ruby

require_relative '../config/environment'


class TicTac_CLI
  attr_accessor :num_players, :player_token, :game, :choice, :again

  puts "Hello and welcome to the first and ONLY 'virtual Tic Tac Toe' game to EVER be created!(Not really...)"
  puts "-----------"
  puts "Powered by, and brought to you by:  The Voltron 5,000 Power Ranger Engine 2.0"
  puts "-----------"
  sleep(1)
  puts "How many players wish to play this epic game?"
  @num_players = gets.chomp.to_i
  puts "You chose: #{@num_players}."


  def self.again?
    sleep(1)
    puts "Play virtual Tic Tac Toe again? Type 'yes' or 'no' please."
    @again = gets.chomp.downcase

    unless @again == "yes" || @again == "no"
      puts "I said please!"
      self.again?
    else
      puts "You chose: #{@again}."
      sleep(1)
    end

    if @again == "yes"
      self.player_options
    else @again == "no"
    puts "Goodbye!"
    exit
    end
  end

  def self.player_options

    if @num_players == 0

      def self.comp_battle

        puts "Would you like to play 'wargames' mode or normal mode?"
        @choice = gets.chomp.downcase

        unless @choice == "wargames" || @choice == "normal"
          puts "invalid option"
          self.comp_battle
        else
          puts "You chose: #{@choice}."
          sleep(1)
        end

        if @choice == "normal"
          game = Game.new(Players::Computer.new("X"), Players::Computer.new("O"), Board.new)
          game.play
          puts self.again?
        else @choice == "wargames"
        @game = Game.new(Players::Computer.new("X"), Players::Computer.new("O"), Board.new)
        puts "The computers are ANGRY at each other... They're going to play 100 times to see who's better!"
        sleep(2)
        puts "wargames mode: ACTIVATED"
        sleep(2)
        puts ""
        sleep(1)
        puts ""
        sleep(1)
        puts "         ▄▀▀▀▀▀▀▀▀"
        puts "     █░░░░▒▒▒▒▒▒▒▒▒▒▒▒▀▀▄"
        puts "   █░░░▒▒▒▒▒▒░░░░░░░░▒▒▒░█"
        puts "   █░░░░░░▄██▀▄▄░░░░░▄▄▄░░░█"
        puts " ▄▀▒▄▄▄▒░█▀▀  ▄▄█░░░█ ▄█░░░█"
        puts " █░▒█▒▄░▀▄▄▄▀░░░░░░░░█░░░▒▒▒▒▒█"
        puts " █░▒█░█▀▄▄░░░░░█▀░░░░▀▄░░█▀▀▄▒█"
        puts "  █░▀▄░█▄░█▀▄▄░▀░▀▀░▄▄▀░▄█  █"
        puts "   █░░░░██░ ▀█▄▄▄█▄▄█▄ █  █ █"
        puts "    █░░░░▀▀▄░ █ ░█ █ █ █ █ ░█"
        puts "     ▀▄░░░░░▀▀█▄▄█▄█▄█▄█▄▀░░█"
        puts "       ▀▄▄░▒▒▒▒░░░░░░░░░░▒░░░█"
        puts "         ▀▀▀▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▀"
        puts ""
        sleep(2)
        100.times.each_with_index { |item, index| puts "Game #{index + 1} has been played with this result: #{@game.play}" }
        puts self.again?
        end
      end

      puts self.comp_battle

    elsif @num_players == 1

      def self.prompt

        puts "Who should go first? 'X' or 'O'? (the Computer is 'O' by default)"
        @player_token = gets.chomp.upcase

        unless @player_token == "X" || @player_token == "O"
          puts "wrong character"
          self.prompt
        else
          puts "You chose: #{@player_token}."
        end

        if @player_token == "X"
          @game = Game.new(Players::Human.new(@player_token), Players::Computer.new("O"), Board.new)
        else
          @game = Game.new(Players::Computer.new("X"), Players::Human.new(@player_token), Board.new)
        end
      end

      puts self.prompt
      @game.play
      puts self.again?

    elsif @num_players == 2
      puts "Enjoy humans!"
      sleep(1)
      @game = Game.new(Players::Human.new("X"), Players::Human.new("O"), Board.new)
      @game.play
      puts self.again?
    end
  end
end
TicTac_CLI.player_options
